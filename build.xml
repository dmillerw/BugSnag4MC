<?xml version="1.0" encoding="UTF-8"?>
<project name="BugSnag4MC" default="install" basedir=".">
   <!-- Versions -->
   <property name="major.ver" value="1" />
   <property name="minor.ver" value="0" />
   <property name="revis.ver" value="0" />
   <property name="build.ver" value="${major.ver}.${minor.ver}.${revis.ver}" />
   <property name="buildNumber" value="${bamboo.buildNumber}" />
   <property name="fullversion" value="${build.ver}-b${buildNumber}" />
   <property name="mcp.version" value="811" />
   <property name="minecraft.version" value="1.6.4" />
   <property name="forgemajor.version" value="9.11.1" />
   <property name="forgebuild" value="916" />
   <property name="forge.version" value="${minecraft.version}-${forgemajor.version}.${forgebuild}" />
   <property name="forgeant.version" value="${forgemajor.version}.${forgebuild}" />
   <!-- Directories -->
   <property name="download.dir" value="downloads" />
   <property name="src.dir" value="src" />
   <property name="lib.dir" value="lib" />
   <property name="build.dir" value="build/${minecraft.version}" />
   <property name="classes.dir" value="${build.dir}/packaging" />
   <property name="forge.dir" value="${build.dir}/forge" />
   <property name="dist.dir" value="dist" />
   <property name="mcp.dir" value="${forge.dir}/mcp" />
   <property name="mcplib.dir" value="${mcp.dir}/lib" />
   <property name="mcpsrc.dir" value="${mcp.dir}/src/minecraft" />
   <!-- URLs -->
   <property name="forge.url" value="http://files.minecraftforge.net/minecraftforge/minecraftforge-src-${forge.version}.zip" />
   <property name="apisource.url" value="http://dmillerw.nodedevs.net/files/" />
   <!-- Name -->
   <property name="package.meta-inf" value="META-INF" />
   <!-- Version Checking -->
   <property file="${forge.dir}/forgeversion.properties" />
   <condition property="forge-already-installed">
      <equals arg1="${forge.build.number}" arg2="${forgebuild}" />
   </condition>
   <available property="forge-exists" file="${download.dir}/minecraftforge-src-${forge.version}.zip" />
   <mkdir dir="${download.dir}" />
   <mkdir dir="${dist.dir}" />
   <mkdir dir="build" />
   <mkdir dir="${build.dir}" />
   <condition property="should-download-ant-contrib">
      <or>
         <available file="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar" />
         <available file="${download.dir}/minecraftforge-src-${forge.version}.zip" />
      </or>
   </condition>
   <!-- Dependencies -->
   <target name="install" depends="build">
      <delete>
         <fileset dir="${dist.dir}">
            <include name="BugSnag4MC*" />
         </fileset>
      </delete>
      <jar destfile="${dist.dir}/BugSnag4MC-${fullversion}.jar" basedir="${classes.dir}" manifest="MANIFEST.MF"/>
      <delete dir="${classes.dir}" />
   </target>
   <target name="rebuild" depends="clean,install" />
   <target name="forgeinstalled.check" />
   <target name="copy-lib">
      <delete dir="${mcplib.dir}/bugsnag.jar" />
      <delete dir="${mcplib.dir}/json.jar" />
	  <copy tofile="${mcplib.dir}/bugsnag.jar">
         <fileset file="${lib.dir}/bugsnag.jar" />
	  </copy>
	  <copy tofile="${mcplib.dir}/json.jar">
         <fileset file="${lib.dir}/json.jar" />
	  </copy>
   </target>
   <target name="copy-source" depends="copy-lib">
      <delete dir="${mcpsrc.dir}/com" />
      <copy todir="${mcpsrc.dir}/com">
         <fileset dir="${src.dir}/com" />
         <filterset>
            <filter token="MAJOR_VERSION" value="${major.ver}" />
            <filter token="MINOR_VERSION" value="${minor.ver}" />
            <filter token="REVISION_VERSION" value="${revis.ver}" />
            <filter token="BUILD" value="${env.BUILD_NUMBER}" />
         </filterset>
      </copy>
   </target>
   <target name="copy-api">
	  <!-- <delete dir="${mcpsrc.dir}/thaumcraft" />
	  <delete dir="${mcpsrc.dir}/dan200" />
	  <delete dir="${mcpsrc.dir}/codechicken" />
	  
	  <copy todir="${mcpsrc.dir}/thaumcraft">
         <fileset dir="${api.dir}/thaumcraft" />
	  </copy>
	  <copy todir="${mcpsrc.dir}/dan200">
         <fileset dir="${api.dir}/dan200" />
	  </copy>
	  <copy todir="${mcpsrc.dir}/codechicken">
         <fileset dir="${api.dir}/codechicken" />
	  </copy> -->
   </target>
   <target name="build" depends="copy-source,setup-forge" unless="already-compiled">
      <!-- Recompile -->
      <exec dir="${mcp.dir}" executable="cmd" osfamily="windows" failonerror="true">
         <arg line="/c recompile.bat" />
      </exec>
      <exec dir="${mcp.dir}" executable="sh" osfamily="unix" failonerror="true">
         <arg value="recompile.sh" />
      </exec>
      <!-- Reobfuscation -->
      <exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
         <arg line="/c reobfuscate_srg.bat" />
      </exec>
      <exec dir="${mcp.dir}" executable="sh" osfamily="unix">
         <arg value="reobfuscate_srg.sh" />
      </exec>
      <copy todir="${classes.dir}">
         <fileset dir="${mcp.dir}/reobf/minecraft" />
      </copy>
      <mkdir dir="${classes.dir}/lib" />
      <copy todir="${classes.dir}/lib">
         <fileset dir="${lib.dir}" />
      </copy>
      <copy todir="${classes.dir}" file="pack.mcmeta">
         <filterset>
            <filter token="MAJOR_VERSION" value="${major.ver}" />
            <filter token="MINOR_VERSION" value="${minor.ver}" />
            <filter token="REVISION_VERSION" value="${revis.ver}" />
            <filter token="BUILD" value="${env.BUILD_NUMBER}" />
         </filterset>
      </copy>
   </target>
   <target name="setup-forge" depends="download-forge" unless="forge-already-installed">
      <unzip dest="${build.dir}">
         <fileset dir="${download.dir}">
            <include name="minecraftforge-src-${forge.version}.zip" />
         </fileset>
      </unzip>
      <!-- Change executables' permitions -->
      <chmod file="${forge.dir}/install.sh" perm="+x" />
      <!-- if your building on OSX these 2 should be executable -->
      <!-- Install forge -->
      <delete dir="${mcp.dir}" failonerror="no" />
      <exec dir="${forge.dir}" executable="cmd" osfamily="windows" inputstring="Yes\n">
         <arg line="/c install.cmd" />
      </exec>
      <exec dir="${forge.dir}" executable="sh" osfamily="unix" inputstring="Yes\n">
         <arg value="install.sh" />
      </exec>
      <chmod file="${mcp.dir}/updatemd5.sh" perm="+x" />
      <chmod file="${mcp.dir}/recompile.sh" perm="+x" />
      <chmod file="${mcp.dir}/reobfuscate.sh" perm="+x" />
      <chmod file="${mcp.dir}/runtime/bin/astyle-osx" perm="+x" />
      <chmod file="${mcp.dir}/runtime/bin/jad-osx" perm="+x" />
      <mkdir dir="${mcpsrc.dir}/com" />
   </target>
   <target name="download-forge" depends="download-ant-contrib" unless="forge-exists">
      <taskdef resource="net/sf/antcontrib/antlib.xml">
         <classpath>
            <pathelement location="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar" />
            <fileset dir="${download.dir}/ant-contrib/lib">
               <include name="*.jar" />
            </fileset>
         </classpath>
      </taskdef>
      <echo message="Downloading forge... " />
      <get src="${apisource.url}/minecraftforge-src-${forge.version}.zip" dest="${download.dir}/minecraftforge-src-${forge.version}.zip" />
   </target>
   <target name="download-ant-contrib" unless="should-download-ant-contrib">
      <echo message="Getting: ant-contrib" />
      <mkdir dir="${download.dir}/tmp" />
      <mkdir dir="${download.dir}/ant-contrib/lib" />
      <get src="http://sourceforge.net/projects/ant-contrib/files/ant-contrib/1.0b3/ant-contrib-1.0b3-bin.zip/download" dest="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip" />
      <get src="http://archive.apache.org/dist/commons/codec/binaries/commons-codec-1.6-bin.zip" dest="${download.dir}/tmp/commons-codec-1.6-bin.zip" />
      <unzip src="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip" dest="${download.dir}" />
      <unzip src="${download.dir}/tmp/commons-codec-1.6-bin.zip" dest="${download.dir}/tmp" />
      <move todir="${download.dir}/ant-contrib/lib">
         <fileset file="${download.dir}/tmp/commons-codec-1.6/commons-codec-1.6.jar" />
      </move>
      <!-- Delete useless files -->
      <delete dir="${download.dir}/ant-contrib/docs" />
      <delete dir="${download.dir}/tmp" />
   </target>
   <target name="clean">
      <delete dir="${build.dir}" />
      <delete dir="${download.dir}" />
   </target>
</project>


